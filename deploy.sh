#!/bin/bash

# CRSET Pipeline - Script de Deploy para Produ√ß√£o
# Este script prepara e executa o deploy em produ√ß√£o

set -e

echo "üöÄ CRSET Pipeline - Deploy para Produ√ß√£o"
echo "========================================"

# Verificar se estamos na branch main
CURRENT_BRANCH=$(git branch --show-current)
if [ "$CURRENT_BRANCH" != "main" ]; then
    echo "‚ö†Ô∏è  Aviso: N√£o est√° na branch main (atual: $CURRENT_BRANCH)"
    read -p "Continuar mesmo assim? (y/N): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        echo "‚ùå Deploy cancelado"
        exit 1
    fi
fi

# Verificar se h√° altera√ß√µes n√£o commitadas
if [ -n "$(git status --porcelain)" ]; then
    echo "‚ö†Ô∏è  H√° altera√ß√µes n√£o commitadas:"
    git status --short
    read -p "Fazer commit autom√°tico? (y/N): " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        git add .
        git commit -m "Deploy: $(date '+%Y-%m-%d %H:%M:%S')"
    else
        echo "‚ùå Deploy cancelado. Fa√ßa commit das altera√ß√µes primeiro."
        exit 1
    fi
fi

# Verificar se .env existe
if [ ! -f .env ]; then
    echo "‚ùå Ficheiro .env n√£o encontrado!"
    echo "   Copie .env.example para .env e configure as vari√°veis."
    exit 1
fi

# Verificar vari√°veis cr√≠ticas
echo "üîç Verificando vari√°veis de ambiente..."
source .env

REQUIRED_VARS=(
    "STRIPE_SECRET_KEY"
    "SUPABASE_URL"
    "SUPABASE_ANON_KEY"
    "OPENAI_API_KEY"
    "VITE_API_URL"
    "VITE_STRIPE_PUBLISHABLE_KEY"
)

for var in "${REQUIRED_VARS[@]}"; do
    if [ -z "${!var}" ]; then
        echo "‚ùå Vari√°vel $var n√£o est√° definida!"
        exit 1
    fi
done

echo "‚úÖ Vari√°veis de ambiente OK"

# Executar testes
echo "üß™ Executando testes..."
make test-backend || echo "‚ö†Ô∏è  Testes do backend falharam"
make test-frontend || echo "‚ö†Ô∏è  Testes do frontend falharam"

# Verificar build
echo "üî® Verificando builds..."
make deploy-check

# Confirmar deploy
echo ""
echo "üìã Resumo do Deploy:"
echo "   Branch: $CURRENT_BRANCH"
echo "   Commit: $(git log -1 --pretty=format:'%h - %s')"
echo "   Backend: Railway"
echo "   Frontend: Vercel"
echo ""
read -p "Confirmar deploy para produ√ß√£o? (y/N): " -n 1 -r
echo

if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo "‚ùå Deploy cancelado"
    exit 1
fi

# Executar deploy
echo "üöÄ Iniciando deploy..."
git push origin $CURRENT_BRANCH

echo ""
echo "‚úÖ Deploy iniciado com sucesso!"
echo ""
echo "üîó Links √∫teis:"
echo "   GitHub Actions: https://github.com/$(git config --get remote.origin.url | sed 's/.*github.com[:/]\(.*\)\.git/\1/')/actions"
echo "   Railway Dashboard: https://railway.app/dashboard"
echo "   Vercel Dashboard: https://vercel.com/dashboard"
echo ""
echo "üì± Aplica√ß√£o:"
echo "   Backend: https://crset-backend-prod.railway.app"
echo "   Frontend: https://crsetsolutions.com"
echo ""
echo "‚è±Ô∏è  O deploy pode demorar alguns minutos. Verifique os dashboards para acompanhar o progresso."

